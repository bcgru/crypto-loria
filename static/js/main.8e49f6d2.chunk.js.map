{"version":3,"sources":["assets/media/logos/logo.png","utility/getWeb3.js","pages/Loading.js","pages/Lawis.js","App.js","reportWebVitals.js","index.js"],"names":["getWeb3","web3","window","ethereum","Web3","Loading","className","SpinnerInfinity","size","secondaryColor","Lawis","SigAddress","config","TOKEN","OWNERS","useState","cloria","setMsdoge","cloriaSig","setMsdogeSig","setWEB3","tokenAddress","setTokenAddress","ownerAddress","setOwnerAddress","ownerBalance","setOwnerBalance","totalSupply","setTotalSupply","isMultipleTransfering","isMultipleDeclining","isLoading","setIsLoading","transferAddress","setTransferAddress","transferAmount","setTransferAmount","sentAmount","setSentAmount","burnAmount","setBurnAmount","setActiveIdx","requestedList","setRequestedList","airDropList","setAirDropList","transferedList","setTransferedList","setReqeustBurn","airDropped","setAirDropped","isConnected","setIsConnected","endTransferRequest","setEndTransferRequest","decTransferNumber","setDecTransferNumber","endBurnRequest","setEndBurnRequest","decBurnNumber","setDecBurnNumber","useEffect","a","_web3","_CLoria","eth","Contract","CryptoLoria","_CLoriaSig","CryptoLoriaSig","getAccounts","_owner","length","indexOf","console","log","initalSetting","getRequestedList","getAirDropList","getLatestItem","approveTransferRequest","declineTransferRequest","methods","balanceOf","call","_ownerBalance","Math","pow","_totalSupply","getTransferedAmount","from","_sentAmount","createTransferRequest","NotificationManager","warning","utils","isAddress","approve","toWei","toString","send","on","receipt","newTransferRequest","res","info","getRequestLength","len","getTransferItem","item","index","error","success","catch","err","idx","getRequestList","list","requestList","filter","isClosed","isSent","sentList","createdBy","approveRequestList","sendMultiple","i","approveTransferListRequest","declineRequestList","processCSV","str","delim","headers","slice","split","rows","newArray","map","row","values","reduce","obj","header","dropList","createBurnRequest","getBurnRequest","isActive","newBurnRequest","approveBurnRequest","declineBurnRequest","AirDrop","chunkList","totalBalance","Number","balances","addresses","ceil","airDrop","walletConnect","enable","getLatestTransferRequest","transfer","cancel","burn","type","id","onClick","substr","src","logo","alt","htmlFor","placeholder","value","onChange","e","target","to","readOnly","fromWei","colSpan","disabled","file","files","reader","FileReader","onloadend","text","result","readAsText","dealedBy","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.8e49f6d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.265e1be1.png\";","import Web3 from \"web3\";\r\n\r\nexport const getWeb3 = () => {\r\n    let web3;\r\n    if (window.ethereum) {\r\n        web3 = new Web3(window.ethereum);\r\n    }\r\n    else if (window.web3) {\r\n        web3 = new Web3(window.web3);\r\n    }\r\n    return web3;\r\n}","import { SpinnerInfinity } from 'spinners-react';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"loading-panel\">\r\n            <SpinnerInfinity\r\n                size={150}\r\n                сolor='#38ad48'\r\n                secondaryColor='rgba(0,0,0,0.44)'\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\nimport logo from '../assets/media/logos/logo.png'\r\nimport CryptoLoria from \"../contracts/CryptoLoria.json\";\r\nimport CryptoLoriaSig from \"../contracts/CryptoLoriaSig.json\";\r\nimport {getWeb3} from \"../utility/getWeb3.js\"\r\nimport Loading from \"./Loading.js\";\r\nimport config from \"./config.json\";\r\n\r\nconst Lawis = () => {\r\n    \r\n    const { SigAddress, TOKEN, OWNERS } = config;\r\n\r\n    const [cloria, setMsdoge] = useState(null);\r\n    const [cloriaSig, setMsdogeSig] = useState(null);\r\n    const [web3, setWEB3] = useState({});\r\n    const [tokenAddress, setTokenAddress] = useState('Loading...');\r\n    const [ownerAddress, setOwnerAddress] = useState('Loading...');\r\n    const [ownerBalance, setOwnerBalance] = useState('Loading...');\r\n    const [totalSupply,  setTotalSupply ] = useState('Loading...');\r\n    const [isMultipleTransfering, setIsMultipleTranfering] = useState(false);\r\n    const [isMultipleDeclining, setIsMultipleDeclining] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [transferAddress, setTransferAddress] = useState('');\r\n    const [transferAmount, setTransferAmount] = useState('');\r\n    const [itemRequested, setItemRequested] = useState(false);\r\n    const [sentAmount, setSentAmount] = useState('Loading...');\r\n    const [burnAmount, setBurnAmount] = useState('');\r\n    const [activeIdx, setActiveIdx] = useState(-1);\r\n    const [requestedList, setRequestedList] = useState([]);\r\n    const [airDropList, setAirDropList] = useState([]);\r\n    const [transferedList, setTransferedList] = useState([]);\r\n    const [requestBurn, setReqeustBurn] = useState(false);\r\n    const [airDropped, setAirDropped] = useState([]);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [endTransferRequest, setEndTransferRequest] = useState('');\r\n    const [decTransferNumber, setDecTransferNumber] = useState('');\r\n    const [endBurnRequest, setEndBurnRequest] = useState('');\r\n    const [decBurnNumber, setDecBurnNumber] = useState('');\r\n\r\n    \r\n    useEffect(async() => {\r\n        \r\n        const _web3 = await getWeb3();\r\n        const _CLoria = new _web3.eth.Contract(CryptoLoria, TOKEN);\r\n        const _CLoriaSig = new _web3.eth.Contract(CryptoLoriaSig, SigAddress);\r\n        setWEB3(_web3);\r\n        setMsdoge(_CLoria);\r\n        setMsdogeSig(_CLoriaSig);\r\n        setTokenAddress(TOKEN);\r\n        const _owner = await _web3.eth.getAccounts();\r\n        if (_owner.length) {\r\n            if (OWNERS.indexOf(_owner[0]) > -1) {\r\n                setIsConnected(true);\r\n                setOwnerAddress(_owner[0]);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    useEffect(async() => {\r\n        if (cloriaSig && isConnected && ownerAddress != 'Loading...') {\r\n        console.log('changed');\r\n            await initalSetting();\r\n            await getRequestedList();\r\n            await getAirDropList();\r\n            await getLatestItem();\r\n        }\r\n\r\n    }, [cloriaSig, isConnected, ownerAddress])\r\n\r\n    useEffect(async() => {\r\n        if (isMultipleTransfering) {\r\n            await approveTransferRequest(0)\r\n        }\r\n    },[isMultipleTransfering]);\r\n\r\n    useEffect(async() => {\r\n        if (isMultipleDeclining) {\r\n            await declineTransferRequest(0)\r\n        }\r\n    },[isMultipleDeclining]);\r\n\r\n    const initalSetting = async () => {\r\n        const _ownerBalance = await cloria.methods.balanceOf(ownerAddress).call();\r\n        setOwnerBalance(_ownerBalance / (Math.pow(10, 9)));\r\n        const _totalSupply = await cloria.methods.totalSupply().call();\r\n        setTotalSupply(_totalSupply / (Math.pow(10, 9)));\r\n        const _sentAmount = await cloriaSig.methods.getTransferedAmount().call({ from: ownerAddress });\r\n        setSentAmount(_sentAmount / (Math.pow(10, 9)));\r\n    }\r\n    const createTransferRequest = async () => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        if (!web3.utils.isAddress(transferAddress)) {\r\n            NotificationManager.warning(\"Please enter correct address!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        if (transferAmount <= 0) {\r\n            NotificationManager.warning(\"Please enter correct amount!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        try{\r\n            await cloria.methods.approve(SigAddress, web3.utils.toWei(transferAmount.toString(), \"gwei\")).\r\n            send({ from : ownerAddress })\r\n            .on('receipt', async(receipt) => {\r\n                await cloriaSig.methods.newTransferRequest(transferAddress, web3.utils.toWei(transferAmount.toString(), \"gwei\"))\r\n                .send({ from: ownerAddress })\r\n                .on('receipt', async(res) => {\r\n                    NotificationManager.info(\"Added successfully!\", \"Info\");\r\n                    const len = await cloriaSig.methods.getRequestLength().call();\r\n                    const item = await cloriaSig.methods.getTransferItem(len - 1).call();\r\n                    setActiveIdx(item.index - 1);\r\n                    await getRequestedList();\r\n                    setIsLoading(false);\r\n                    setTransferAddress('');\r\n                    setTransferAmount('');\r\n                });\r\n            })\r\n        }\r\n        catch(err) {\r\n            if (err) {\r\n                setIsLoading(false);\r\n                NotificationManager.error(\"Request is failed!\", \"Failed\");\r\n                setTransferAddress('');\r\n                setTransferAmount('');\r\n            }\r\n        }\r\n    }\r\n\r\n    const approveTransferRequest = async () => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n        \r\n        if (!endTransferRequest) {\r\n            NotificationManager.warning(\"No request!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            await cloriaSig.methods.approveTransferRequest(endTransferRequest.index)\r\n            .send({ from: ownerAddress })\r\n            .on('receipt', async(res) => {\r\n                NotificationManager.success(\"Sent successfully!\", \"Success\");\r\n                await getRequestedList();\r\n                await getLatestItem();\r\n                setIsLoading(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            \r\n        } catch(err) {\r\n            NotificationManager.error(\"Transaction is failed!\", \"Failed\");\r\n            await getRequestedList();\r\n            await getLatestItem();\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const declineTransferRequest = async (idx) => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        if (!endTransferRequest) {\r\n            NotificationManager.warning(\"No request!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            await cloriaSig.methods.declineTransferRequest(endTransferRequest.index)\r\n            .send({ from: ownerAddress })\r\n            .on('receipt', async(res) => {\r\n                NotificationManager.success(\"Sent successfully!\", \"Success\");\r\n                await getRequestedList();\r\n                await getLatestItem();\r\n                setIsLoading(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            \r\n        } catch(err) {\r\n            NotificationManager.error(\"Transaction is failed!\", \"Failed\");\r\n            await getRequestedList();\r\n            await getLatestItem();\r\n            setIsLoading(false);\r\n\r\n        }\r\n    }\r\n    \r\n    const getRequestedList = async () => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        if (!cloriaSig) {\r\n            return;\r\n        }\r\n        let list = await cloriaSig.methods.getRequestList().call({ from: ownerAddress });\r\n        const requestList = list.filter(item => item.isClosed == false && item.isSent == false);\r\n        const sentList = list.filter(item => item.isSent == true);\r\n        console.log('list=>', list);\r\n        setRequestedList(requestList);\r\n        setTransferedList(sentList);\r\n    }\r\n\r\n    const getAirDropList = async() => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        if (!cloriaSig) {\r\n            return;\r\n        }\r\n        let list = await cloriaSig.methods.getAirDropList().call({ from : ownerAddress });\r\n        list = list.filter(item => item.createdBy == ownerAddress)\r\n        setAirDropped(list);\r\n    }\r\n\r\n    const approveRequestList = async () => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        let sendMultiple = [];\r\n\r\n        for (let i = 0; i < requestedList.length; i ++) {\r\n            sendMultiple[i] = requestedList[i]['index'];\r\n        }\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            await cloriaSig.methods.approveTransferListRequest(sendMultiple)\r\n            .send({ from: ownerAddress })\r\n            .on('receipt', async(res) => {\r\n                NotificationManager.success(\"Sent successfully!\", \"Success\");\r\n                await getRequestedList();\r\n                await getLatestItem();\r\n                setIsLoading(false);\r\n            })\r\n        } catch(err) {\r\n            NotificationManager.error(\"Transaction is failed!\", \"Failed\");\r\n            await getRequestedList();\r\n            await getLatestItem();\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const declineRequestList = async () => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        let sendMultiple = [];\r\n\r\n        for (let i = 0; i < requestedList.length; i ++) {\r\n            sendMultiple[i] = requestedList[i]['index'];\r\n        }\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            await cloriaSig.methods.approveTransferListRequest(sendMultiple)\r\n            .send({ from: ownerAddress })\r\n            .on('receipt', async(res) => {\r\n                NotificationManager.success(\"Sent successfully!\", \"Success\");\r\n                await getRequestedList();\r\n                await getLatestItem();\r\n                setIsLoading(false);\r\n            })\r\n        } catch(err) {\r\n            NotificationManager.error(\"Transaction is failed!\", \"Failed\");\r\n            await getRequestedList();\r\n            await getLatestItem();\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const importAirDropList = (e) => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = function(e) {\r\n            const text = e.target.result;\r\n            processCSV(text)\r\n        }\r\n\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    const processCSV = (str, delim = ',') => {\r\n        const headers = str.slice(0,str.indexOf('\\n') - 1 ).split(delim);\r\n        const rows = str.slice(str.indexOf('\\n') + 1, str.length - 1).split('\\n');\r\n        const newArray = rows.map(row => {\r\n            row = row.slice(0, row.indexOf('\\r'));\r\n            const values = row.split(delim);\r\n            const eachObject = headers.reduce((obj, header, i) => {\r\n                obj[header] = values[i];\r\n                return obj;\r\n            }, {})\r\n            return eachObject;\r\n        })\r\n        const dropList = newArray.slice(0, 1);\r\n        setAirDropList(dropList)\r\n    }\r\n    \r\n    const createBurnRequest = async() => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        if (!burnAmount) {\r\n            NotificationManager.warning(\"Please input amount\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        const requestItem = await cloriaSig.methods.getBurnRequest().call();\r\n        if (requestItem.isActive) {\r\n            NotificationManager.warning(\"Already requested\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        setBurnAmount('');\r\n        setIsLoading(true);\r\n        \r\n        try {\r\n            await cloria.methods.approve(SigAddress, web3.utils.toWei(burnAmount.toString(), \"gwei\")).\r\n            send({ from : ownerAddress })\r\n            .on('receipt', async(receipt) => {\r\n                await cloriaSig.methods.newBurnRequest(web3.utils.toWei(burnAmount.toString(),\"gwei\"))\r\n                .send({ from: ownerAddress })\r\n                .on('receipt', (res) => {\r\n                    NotificationManager.success(\"Requested successfully\", \"Success\");\r\n                    setReqeustBurn(false);\r\n                    setIsLoading(false);\r\n                });\r\n            })\r\n        } catch(err) {\r\n            console.log(err);\r\n            if (err) {\r\n                setReqeustBurn(false);\r\n                NotificationManager.error(\"Request failed\", \"Failed\");\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const approveBurnRequest = async() => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            await cloriaSig.methods.approveBurnRequest()\r\n            .send({ from: ownerAddress })\r\n            .on('receipt', receipt => {\r\n                NotificationManager.success(\"Burned successfully\", \"Success\");\r\n                setReqeustBurn(false);\r\n                setIsLoading(false);\r\n            })\r\n        } catch(err) {\r\n            if (err) {\r\n                setReqeustBurn(false);\r\n                setIsLoading(false);\r\n                NotificationManager.error(\"Burn failed\", \"Failed\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const declineBurnRequest = async() => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"No requested\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        \r\n        try {\r\n            console.log(web3.utils.toWei(burnAmount.toString(),\"gwei\"), ownerAddress);\r\n\r\n            await cloriaSig.methods.declineBurnRequest()\r\n            .send({ from: ownerAddress })\r\n            .on('receipt', (res) => {\r\n                NotificationManager.success(\"Declined successfully\", \"Success\");\r\n                setReqeustBurn(false);\r\n                setIsLoading(false);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        } catch(err) {\r\n            console.log(err);\r\n            if (err) {\r\n                setReqeustBurn(false);\r\n                NotificationManager.error(\"Declined failed\", \"Failed\");\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const AirDrop = async() => {\r\n        if (!isConnected) {\r\n            NotificationManager.warning(\"Metamask is not connected!\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        if (!airDropList.length) {\r\n            NotificationManager.warning(\"No air drop list\", \"Warning\");\r\n            return;\r\n        }\r\n\r\n        let chunkList = [];\r\n        let totalBalance = 0;\r\n        setIsLoading(true);\r\n        console.log(airDropList);\r\n        try {\r\n            for (let i = 0; i < airDropList.length; i ++) {\r\n                chunkList[i] = {};\r\n                totalBalance += Number(airDropList[i].balances);\r\n                chunkList[i][\"addresses\"] = airDropList[i].addresses;\r\n                chunkList[i][\"balances\"] = web3.utils.toWei(airDropList[i].balances, 'gwei');\r\n            }\r\n\r\n            const ownerBalance = await cloria.methods.balanceOf(ownerAddress).call();\r\n            if (ownerBalance <= totalBalance) {\r\n                NotificationManager.warning(\"Balance is not enough\", \"Warning\");\r\n                return;\r\n            }\r\n            totalBalance = Math.ceil(totalBalance);\r\n            await cloria.methods.approve(SigAddress, web3.utils.toWei(totalBalance.toString(), \"gwei\"))\r\n            .send({ from: ownerAddress })\r\n            .on('receipt', async(res) => {                \r\n                await cloriaSig.methods.airDrop(chunkList)\r\n                .send({ from : ownerAddress })\r\n                .on('receipt', res => {\r\n                    NotificationManager.success(\"Airdropped successfully!\", \"Success\");\r\n                    setIsLoading(false);\r\n                    setAirDropList([]);\r\n                })\r\n                .catch(err => console.log)\r\n            })\r\n        } catch(err) {\r\n            console.log(err);\r\n            if (err) {\r\n                NotificationManager.error(\"Airdropped failed!\", \"Failed\");\r\n                setIsLoading(false);\r\n                setAirDropList([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const walletConnect = async() => {\r\n        if (web3) {\r\n            if (!window.ethereum) {\r\n                NotificationManager.warning(\"Metamask is not installed\", \"Warning\");\r\n                return;\r\n            }\r\n            else {\r\n                const res = await window.ethereum.enable();\r\n                if (res.length) {\r\n                    setIsConnected(true);\r\n                    setOwnerAddress(res[0]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getLatestItem = async() => {\r\n        const transfer = await cloriaSig.methods.getLatestTransferRequest().call({ from: ownerAddress });\r\n        if (transfer.item.isActive) {\r\n            setEndTransferRequest(transfer.item);\r\n            setDecTransferNumber(transfer.cancel);\r\n        }\r\n\r\n        const burn = await cloriaSig.methods.getBurnRequest().call();\r\n        console.log(burn);\r\n        if (burn.item.isActive) {\r\n            setEndBurnRequest(burn.item);\r\n            setDecBurnNumber(burn.cancel);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <NotificationContainer/>\r\n            { isLoading && <Loading/> }\r\n            <div className=\"container d-flex justify-content-end mt-3\">\r\n                <button type=\"button\" className=\"btn btn-success mb-1\" id=\"wallet-connect\" onClick={walletConnect}>\r\n                    {\r\n                        isConnected\r\n                            ? ownerAddress.substr(0, 6) + '...' + ownerAddress.substr(-4)\r\n                            : \"Connect Wallet\"\r\n                    }\r\n                </button>\r\n            </div>\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <div className=\"col image-wrapper logo\">\r\n                    <img src={logo}\r\n                        alt=\"\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6 mb-4\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    Token address\r\n                                </h5>\r\n                                <div className=\"card-text\" id=\"tokenAddress\">\r\n                                    {tokenAddress}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-6 mb-4\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    Owner address\r\n                                </h5>\r\n                                <div className=\"card-text\" id=\"ownerAddress\">\r\n                                    {ownerAddress}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3 mb-4\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    Token supply\r\n                                </h5>\r\n                                <div className=\"card-text\" id=\"tokenSupply\">\r\n                                    {totalSupply}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-3 mb-4\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    Tokens transfered\r\n                                </h5>\r\n                                <div className=\"card-text\" id=\"tokensTransfered\">\r\n                                    {sentAmount}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-3 mb-4\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    Owner balance\r\n                                </h5>\r\n                                <div className=\"card-text\" id=\"ownerBalance\">\r\n                                    {ownerBalance}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-3 mb-4\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    Lock status\r\n                                </h5>\r\n                                <div className=\"card-text\" id=\"lockStatus\">\r\n                                    false\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <h2 className=\"mt-5 mb-3 col-7\"><strong>Transfer Coins</strong></h2>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-5\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    <strong>Create transfer request</strong>\r\n                                </h5>\r\n                                <fieldset id=\"createTransferFieldset\">\r\n                                    <label htmlFor=\"createTransferToAddress\">Send tokens to new address</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Address\"\r\n                                            aria-label=\"Address\"\r\n                                            id=\"createTransferToAddress\"\r\n                                            value={transferAddress}\r\n                                            onChange={(e) => setTransferAddress(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <label htmlFor=\"createTransferTokens\">Tokens (without decimals)</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Tokens\"\r\n                                            aria-label=\"Tokens\"\r\n                                            id=\"createTransferTokens\"\r\n                                            value={ transferAmount }\r\n                                            onChange = { (e) => setTransferAmount(e.target.value) }\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button type=\"button\" className=\"btn btn-success w-100 mb-1\" id=\"transferCreateButton\"\r\n                                        onClick={ () => createTransferRequest() }>Create</button>\r\n                                </fieldset>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    <strong>Current transfer request</strong>\r\n                                </h5>\r\n                                <fieldset id=\"createTransferFieldset\">\r\n                                    <label htmlFor=\"createTransferToAddress\">Send tokens to new address</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"createTransferToAddress\"\r\n                                            value={endTransferRequest ? endTransferRequest.to : ''}\r\n                                            readOnly\r\n                                        />\r\n                                    </div>\r\n                                    <label htmlFor=\"createTransferTokens\">Tokens (without decimals)</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            id=\"createTransferTokens\"\r\n                                            value={ endTransferRequest ? web3.utils.fromWei(endTransferRequest.value, 'gwei') : '' }\r\n                                            readOnly\r\n                                        />\r\n                                    </div>\r\n                                    <label htmlFor=\"createTransferTokens\">Created By</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"createTransferTokens\"\r\n                                            value={ endTransferRequest ? endTransferRequest.createdBy : '' }\r\n                                            readOnly\r\n                                        />\r\n                                    </div>\r\n                                    <label htmlFor=\"createTransferTokens\">Number of Cancellations</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            id=\"createTransferTokens\"\r\n                                            value={ endTransferRequest ? decTransferNumber : '' }\r\n                                            readOnly\r\n                                        />\r\n                                    </div>\r\n                                </fieldset>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <button type=\"button\" className=\"btn btn-success w-100 mb-1\" id=\"transferApproveButton\"\r\n                                    onClick={ () =>approveTransferRequest() }>Approve</button>\r\n                                <button type=\"button\" className=\"btn btn-light w-100\" id=\"transferDeclineButton\"\r\n                                    onClick={ () =>declineTransferRequest() }>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <h2 className=\"mt-5 mb-3 col-7\"><strong>Burn Coins</strong></h2>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-5\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    <strong>Create  a Request to Burn Coins</strong>\r\n                                </h5>\r\n                                <fieldset id=\"createTransferFieldset\">\r\n                                    <label htmlFor=\"createTransferToAddress\">Tokens (without decimals</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input type=\"number\" className=\"form-control\" placeholder=\"Tokens\" aria-label=\"Address\"\r\n                                            id=\"createTransferToAddress\" value={burnAmount} onChange={(e) => setBurnAmount(e.target.value) } />\r\n                                    </div>\r\n                                    <button type=\"button\" className=\"btn btn-success w-100 mb-1\" id=\"transferCreateButton\"\r\n                                        onClick={ () => createBurnRequest() }>Create</button>\r\n                                </fieldset>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    <strong>Current transfer request</strong>\r\n                                </h5>\r\n                                <fieldset id=\"createTransferFieldset\">\r\n                                    <label htmlFor=\"createTransferTokens\">Tokens (without decimals)</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            id=\"createTransferTokens\"\r\n                                            value={ endBurnRequest ? web3.utils.fromWei(endBurnRequest.value, 'gwei') : '' }\r\n                                            readOnly\r\n                                        />\r\n                                    </div>\r\n                                    <label htmlFor=\"createTransferTokens\">Created By</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"createTransferTokens\"\r\n                                            value={ endBurnRequest ? endBurnRequest.createdBy : '' }\r\n                                            readOnly\r\n                                        />\r\n                                    </div>\r\n                                    <label htmlFor=\"createTransferTokens\">Number of Cancellations</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            id=\"createTransferTokens\"\r\n                                            value={ endBurnRequest ? decBurnNumber : '' }\r\n                                            readOnly\r\n                                        />\r\n                                    </div>\r\n                                </fieldset>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <button type=\"button\" className=\"btn btn-success w-100 mb-1\" id=\"transferApproveButton\"\r\n                                    onClick={ () => approveBurnRequest() }>Approve</button>\r\n                                <button type=\"button\" className=\"btn btn-light w-100\" id=\"transferDeclineButton\"\r\n                                    onClick={ () => declineBurnRequest() }>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"table-upload-wrapper mt-5\">\r\n                <div className=\"container\">\r\n                    <h2 className=\"mt-5 mb-3\">\r\n                        <strong>Current Batch Transfer Request</strong>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"container mb-5 mt-1\">\r\n                    <table className=\"table upload-data\">\r\n                        <thead className='thead-dark'>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Addresses</th>\r\n                                <th>Balances</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                requestedList.map((item, idx) => {\r\n                                    return (\r\n                                        <tr key={idx}>\r\n                                            <td>{idx + 1}</td>\r\n                                            <td>{item.to}</td>\r\n                                            <td>{web3.utils.fromWei(item.value, 'gwei')}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {\r\n                                !requestedList.length && \r\n                                <tr>\r\n                                    <td colSpan={3} className=\"text-center\">No requested</td>\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <div className=\"card-body\">\r\n                                <button type=\"button\" className=\"btn btn-success w-100 mb-1\" id=\"transferApproveButton\" onClick={ () =>approveRequestList() } disabled={!requestedList.length && true}>Approve</button>\r\n                                <button type=\"button\" className=\"btn btn-light w-100\" id=\"transferDeclineButton\" onClick={ () =>declineRequestList() }>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"container\">\r\n                    <h2 className=\"mt-5 mb-3\">\r\n                        <strong>Create a Batch Transfer of Coins</strong>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"container controls-section\">\r\n                    <div className=\"upload-file-button\">\r\n                        <div className=\"file-indicator\">\r\n                            Chose file to upload\r\n                        </div>\r\n                        <label htmlFor=\"file-upload\" className=\"custom-file-upload btn  btn-success\">\r\n                            Browse\r\n                        </label>\r\n                        <input id=\"file-upload\" type=\"file\" onChange={importAirDropList} />\r\n                    </div>\r\n\r\n                    <button id=\"uploadBtn\" className=\"btn btn-success\" onClick={AirDrop}>AirDrop</button>\r\n\r\n                    <div className=\"filler\"></div>\r\n                </div>\r\n\r\n                <div className=\"container mb-5 mt-5\">\r\n                    <table className=\"table upload-data\">\r\n                        <thead className='thead-dark'>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Addresses</th>\r\n                                <th>Balances</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                airDropList.map((item, idx) => {\r\n                                    return (\r\n                                        <tr key={idx}>\r\n                                            <td>{idx + 1}</td>\r\n                                            <td>{item.addresses}</td>\r\n                                            <td>{item.balances}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {\r\n                                !airDropList.length && \r\n                                <tr>\r\n                                    <td colSpan={3} className=\"text-center\">No rows</td>\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n                <div className=\"container mb-5 mt-10\">\r\n                    <h2 className=\"mt-5 mb-3\">\r\n                        <strong>Previous Transfers</strong>\r\n                    </h2>\r\n                    <table id=\"upload-table\" className=\"table\">\r\n                        <thead className='thead-dark'>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Dealer</th>\r\n                                <th>Value</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                transferedList.map((item, idx) => {\r\n                                    return (\r\n                                        <tr key={idx}>\r\n                                            <td>{idx + 1}</td>\r\n                                            <td>{item.createdBy}</td>\r\n                                            <td>{item.to}</td>\r\n                                            <td>{item.dealedBy}</td>\r\n                                            <td>{web3.utils.fromWei(item.value, \"gwei\")}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {\r\n                                !transferedList.length && \r\n                                <tr>\r\n                                    <td colSpan={4} className=\"text-center\">No requested</td>\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n                <div className=\"container mb-5 mt-10\">\r\n                    <h2 className=\"mt-5 mb-3\">\r\n                        <strong>Previous Airdrop</strong>\r\n                    </h2>\r\n                    <table id=\"upload-table\" className=\"table\">\r\n                        <thead className='thead-dark'>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Value</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                airDropped.map((item, idx) => {\r\n                                    return (\r\n                                        <tr key={idx}>\r\n                                            <td>{idx + 1}</td>\r\n                                            <td>{ownerAddress}</td>\r\n                                            <td>{item.addresses}</td>\r\n                                            <td>{web3.utils.fromWei(item.balances, \"gwei\")}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {\r\n                                !airDropped.length && \r\n                                <tr>\r\n                                    <td colSpan={4} className=\"text-center\">No requested</td>\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Lawis\r\n","import './assets/css/index.css'\r\nimport './assets/css/theme.min.css'\r\nimport 'react-notifications/lib/notifications.css'\r\nimport Lawis from './pages/Lawis';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n     <Lawis />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}